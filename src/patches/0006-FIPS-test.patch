commit bb6a1a2574e56f08956461b790b7ab9aa4dc54fd
Author: Daniel Bevenius <daniel.bevenius@gmail.com>
Date:   Sun Jun 18 14:15:00 2017 +0200

    test: support shared openssl with fips
    
    The motivation for this commit is that we are building Node with
    --shared-openssl. In our case the system OpenSSL version supports FIPS.
    
    The tests in test-crypto-fips that toggle the fips mode on/off using
    the config file option might succeed and return 1 instead of an error
    being thrown from OpenSSL (which is what happens for a default build
    but the error is not processed/displayed in any way at the moment):
    openssl config failed: error:060B10A7:digital envelope
    routines:ALG_MODULE_INIT:fips mode not supported
    
    Note that this only concerns the test that use the configuration file
    option which is different from when calling the fips setter as
    the handling of the configuration file is handled by OpenSSL, so it
    is not possible for us to try to call the fips setter as that would
    throw an error ("Error: Cannot set FIPS mode in a non-FIPS build.").
    
    The suggestion is to detect when an error containing 'fips mode not
    supported' and return early from the test as the asserts will not be
    valid. This allows the tests to pass with the normal default
    configuration in addition to when OpenSSL is shared and has support for
    fips.
    
    I've tested this with the three combinations that I'm aware of:
    1. Bundled OpenSSL (none fips)
       $ ./configure && make -j8 test
    
    2. Shared OpenSSL
       $ ./configure --shared-openssl && make -j8 test
    
    3. Shared OpenSSL with openssl-fips:
       $ ./configure --debug --shared-openssl
    --shared-openssl-libpath=/path/build_1_0_2k/lib
    --shared-openssl-includes=/path/build_1_0_2k/include
    --openssl-fips=/pathbuild_1_0_2k/ && make -j8 test
    
      Manual verification of build option 3:
      $ out/Release/node --enable-fips
      > require('crypto').fips
      1
---
 test/parallel/test-crypto-fips.js | 24 +++++++++++++++++++++---
 1 file changed, 21 insertions(+), 3 deletions(-)

diff --git a/test/parallel/test-crypto-fips.js b/test/parallel/test-crypto-fips.js
index 2b87937..74a9d37 100644
--- a/test/parallel/test-crypto-fips.js
+++ b/test/parallel/test-crypto-fips.js
@@ -48,6 +48,24 @@ function testHelper(stream, args, expectedOutput, cmd, env) {
   function responseHandler(buffer, expectedOutput) {
     const response = buffer.toString();
     assert.notStrictEqual(response.length, 0);
+    // If Node was configured using --openssl-shared fips support might be
+    // available depending on how OpenSSL was built. If fips support is
+    // available the tests that toggle the fips_mode on/off using the config
+    // file option will succeed and return 1 instead returning 0 and an
+    // OpenSSL error being thrown:
+    // "openssl config failed: error:060B10A7:
+    // digital envelope routines:ALG_MODULE_INIT:fips mode not supported"
+    //
+    // Note that this case is different from when calling the fips setter as the
+    // configuration file is handled by OpenSSL, so it is not possible for us
+    // to try to call the fips setter, to try to detect this situation, as
+    // that would throw an error:
+    // ("Error: Cannot set FIPS mode in a non-FIPS build.").
+    if (child.stderr.includes('fips mode not supported')) {
+      console.error(`Child #${++num_children_ok} [pid:${child.pid}] SKIPPED.`);
+      return;
+    }
+
     if (FIPS_ENABLED !== expectedOutput && FIPS_DISABLED !== expectedOutput) {
       // In the case of expected errors just look for a substring.
       assert.ok(response.includes(expectedOutput));
@@ -89,7 +107,7 @@ testHelper(
 testHelper(
   'stdout',
   [`--openssl-config=${CNF_FIPS_ON}`],
-  compiledWithFips() ? FIPS_ENABLED : FIPS_DISABLED,
+  FIPS_ENABLED,
   'require("crypto").fips',
   process.env);
 
@@ -97,7 +115,7 @@ testHelper(
 testHelper(
   'stdout',
   [],
-  compiledWithFips() ? FIPS_ENABLED : FIPS_DISABLED,
+  FIPS_ENABLED,
   'require("crypto").fips',
   addToEnv('OPENSSL_CONF', CNF_FIPS_ON));
 
@@ -105,7 +123,7 @@ testHelper(
 testHelper(
   'stdout',
   [`--openssl-config=${CNF_FIPS_ON}`],
-  compiledWithFips() ? FIPS_ENABLED : FIPS_DISABLED,
+  FIPS_ENABLED,
   'require("crypto").fips',
   addToEnv('OPENSSL_CONF', CNF_FIPS_OFF));
 
